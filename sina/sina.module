<?php

/**
 * @file
 * 
 * This module enable the users connect with Sina Weibo.
 * 
 */

use Drupal\sina\SaeTClientV2;


/**
 * Implements hook_menu().
 */
function sina_menu() {  
	$items['admin/config/people/sina'] = array(
		'title' => 'Sina Weibo Login',
		'description' => 'Configure required settings for Sina Weibo integration',
    'route_name' => 'sina.admin',
    'weight' => 10, 
	);
  return $items;
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function sina_form_user_form_alter(&$form, $form_state) {
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function sina_form_user_login_form_alter(&$form, $form_state) {
	$img = \Drupal::config('sina.settings')->get('weibo_button_url', 'http://www.sinaimg.cn/blog/developer/wiki/240.png');
	$form['weibo_login'] = array(
		'#type' => 'item',
		'#description' => l(theme('image', array('path' => $img)), 'sina/response', array('html' => TRUE)),
	);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function sina_form_user_register_form_alter(&$form, $form_state) {
	$form['weibo_uid'] = array(
		'#type' => 'value',
		'#value' => $_SESSION['weibo_token']['uid'],
	);
	$form['sina'] = array(
		'#type' => 'item',
		'#description' => '<b style="color:red;">' . l(t('Bundling existing account.'), 'sina/bind/exist') . '</b>',
	);
}

/*function sina_form_alter(&$form, $form_state, $form_id) {
    if ($form_id == 'user_register_form' || $form_id = 'user_login') {
        if (isset($_SESSION['weibo_token']['uid']) && arg(0) == 'sina') {
            $form['weibo_uid'] = array(
                '#type' => 'value',
                '#value' => $_SESSION['weibo_token']['uid'],
            );
            $form['access_token'] = array(
                '#type' => 'value',
                '#value' => $_SESSION['weibo_token']['access_token'],
            );
        }

        // Sign.
        if (arg(2) == 'new' && arg(0) == 'sina') {
            $form['sina_new'] = array(
                '#type' => 'value',
                '#value' => TRUE,
            );
        }
        elseif (arg(2) == 'exist' && arg(0) == 'sina') {
            $form['sina_exist'] = array(
                '#type' => 'value',
                '#value' => TRUE,
            );
        }
    }

    if ($form_id == 'user_register_form' && arg(0) == 'sina' && arg(2) == 'new') {
        $form['sina'] = array(
            '#type' => 'item',
            '#description' => '<b style="color:red;">' . l(t('Bundling existing account.'), 'sina/bind/exist') . '</b>',
        );
		}
}*/

/**
 * Implements hook_user_insert().
 */
function sina_user_insert($account) {
  /*if (isset($edit['sina_new'])) {
    // Insert new.
    db_insert('sina')
        ->fields(array(
            'uid' => $account->uid,
            'weibo_uid' => $edit['weibo_uid'] ? $edit['weibo_uid'] : 0,
            'access_token' => $edit['access_token'] ? $edit['access_token'] : 0,
        ))
        ->execute();
	}*/
}

/**
 * Implements hook_user_login().
 */
function sina_user_login($account) {
  /*if (isset($edit['values']['sina_exist'])) {
    // Insert new.
    db_insert('sina')
        ->fields(array(
            'uid' => $account->uid,
            'weibo_uid' => $edit['values']['weibo_uid'] ? $edit['values']['weibo_uid'] : 0,
            'access_token' => $edit['values']['access_token'] ? $edit['values']['access_token'] : 0,
        ))
        ->execute();
	}*/
}

/**
 * Implements hook_user_delete().
 */
function sina_user_delete($account) {
    db_delete('sina')
        ->condition('uid', $account->uid)
				->execute();
}

/**
 * Implements hook_user_view().
 */
function sina_user_view($account) {
  global $user;

	if ($user->uid == $account->uid) {
		if (isset($_SESSION['weibo_token']['access_token']) && isset($_SESSION['weibo_token']['uid'])) {
			//module_load_include('php', 'sina', 'saetv2.ex.class');
			$config = \Drupal::config('sina.settings');
			$key = $config->get('weibo_app_key', '');
			$secret = $config->get('weibo_app_secret', '');
			$c = new SaeTClientV2($key , $secret, $_SESSION['weibo_token']['access_token']);
			
			$user_message = $c->show_user_by_id($_SESSION['weibo_token']['uid']);
			//print '<pre>'. check_plain(print_r($user_message, 1)) .'</pre>'; 
			$account->content['summary']['blog'] = array(
				'#type' => 'user_profile_item',
				'#title' => t('Weibo account'),
				'#markup' => theme('image', array('path' => $user_message['profile_image_url'])) . '&nbsp;' . t('screen_name') . ':' . $user_message['screen_name'],
				'#attributes' => array('class' => array('weibo-avatat')),
			);
		}
	}
}
